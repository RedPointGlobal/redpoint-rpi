{{- if .Values.realtimeapi.serviceAccount.enabled }}
{{- if .Values.realtimeapi.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.realtimeapi.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: rpi-realtimeapi
  {{- if eq .Values.global.deployment.platform "azure" }}
  {{- if .Values.cloudIdentity.enabled }}
  {{- if eq .Values.cloudIdentity.azureSettings.credentialsType "workloadIdentity" }}
  annotations:
    azure.workload.identity/client-id: {{ .Values.cloudIdentity.azureSettings.managedIdentityClientId }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if eq .Values.global.deployment.platform "google" }}
  {{- if .Values.cloudIdentity.enabled }}
  {{- if eq .Values.cloudIdentity.azureSettings.credentialsType "workloadIdentity" }}
  annotations:
    iam.gke.io/gcp-service-account: {{ .Values.cloudIdentity.googleSettings.serviceAccountEmail | quote }}
  {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
{{- end }}

---
{{- if .Values.realtimeapi.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.realtimeapi.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: rpi-realtimeapi
spec:
  ports:
  - name: http
    port: {{ .Values.realtimeapi.service.port }}
    protocol: TCP
    targetPort: 8080
  selector:
    app: rpi-realtimeapi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.realtimeapi.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: rpi-realtimeapi
    {{- with .Values.realtimeapi.customLabels }}
    {{- toYaml . | nindent 4 }} 
    {{- end }}
spec:
  {{- if not .Values.realtimeapi.autoscaling.enabled }}
  replicas: {{ .Values.realtimeapi.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: rpi-realtimeapi
  template:
    metadata:
      labels:
        app: rpi-realtimeapi
        {{- with .Values.realtimeapi.customLabels }}
        {{- toYaml . | nindent 8 }} 
        {{- end }}
        {{- if eq .Values.global.deployment.platform "azure" }}
        {{- if eq .Values.cloudIdentity.azureSettings.credentialsType "workloadIdentity" }}
        azure.workload.identity/use: "true"
        {{- end }}
        {{- end }}
      annotations:
        {{- with .Values.realtimeapi.customAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.realtimeapi.customMetrics.enabled }}
        prometheus.io/scrape: {{ .Values.realtimeapi.customMetrics.prometheus_scrape | quote }}
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        {{- end }}
    spec:
      {{- if .Values.global.deployment.images.imagePullSecret.enabled }}
      imagePullSecrets:
      - name: {{ .Values.global.deployment.images.imagePullSecret.name }}
      {{- end }}
      serviceAccountName: {{ .Values.realtimeapi.name }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      containers:
        - name: rpi-realtimeapi
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: {{ .Values.realtimeapi.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.realtimeapi.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.realtimeapi.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.realtimeapi.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: {{ .Values.realtimeapi.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.realtimeapi.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.realtimeapi.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.realtimeapi.readinessProbe.timeoutSeconds }}
          startupProbe:
            httpGet:
              path: /health/live
              port: 8080
            failureThreshold: {{ .Values.realtimeapi.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.realtimeapi.startupProbe.periodSeconds }}
          image: {{ .Values.global.deployment.images.realtimeapi }}:{{ .Values.global.deployment.images.tag }}
          imagePullPolicy: {{  .Values.global.deployment.images.imagePullPolicy }}
          {{- if eq .Values.databases.datawarehouse.provider "redshift" }}
          {{- if .Values.databases.datawarehouse.enabled }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cat /app/odbc-config/odbc2.ini > /app/odbc-config/odbc.ini"]
          {{- end }}
          {{- end }}
          {{- if eq .Values.databases.datawarehouse.provider "bigquery" }}
          {{- if .Values.databases.datawarehouse.enabled }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cat /app/odbc-config/odbc2.ini > /app/odbc-config/odbc.ini"]
          {{- end }}
          {{- end }}
          ports:
          - containerPort: 8080
            name: web-port
            protocol: TCP
          resources:
            limits:
              cpu: {{ .Values.realtimeapi.resources.limits.cpu }}
              memory: {{ .Values.realtimeapi.resources.limits.memory }}
            requests:
              cpu: {{ .Values.realtimeapi.resources.requests.cpu }}
              memory: {{ .Values.realtimeapi.resources.requests.memory }}
          env:
          - name: Logging__LogLevel__Default
            value: {{ .Values.realtimeapi.logging.default | quote }}
          - name: Logging__Database__LogLevel__Default
            value: {{ .Values.realtimeapi.logging.database | quote }}
          - name: Logging__Database__RPITrace
            value: {{ .Values.realtimeapi.logging.rpiTrace | quote }}
          - name: Logging__Database__RPIError
            value: {{ .Values.realtimeapi.logging.rpiError | quote }}
          - name: Logging__Console__LogLevel__Default
            value: {{ .Values.realtimeapi.logging.Console | quote }}
          - name: RPI__DateTimeSource
            value: {{ .Values.databases.operational.dateTimeSource | quote }}
          {{- if .Values.diagnosticsMode.copytoAzureBlob.enabled }}
          - name: RPI__Diagnostics__CopyToAzure__IsEnabled
            value: "true"
          - name: RPI__Diagnostics__CopyToAzure__StorageAccount
            value: {{ .Values.diagnosticsMode.copytoAzureBlob.accountName | quote }}
          - name: RPI__Diagnostics__CopyToAzure__AccessKey
            value: {{ .Values.diagnosticsMode.copytoAzureBlob.accessKey | quote }}
          - name: RPI__Diagnostics__CopyToAzure__ContainerName
            value: {{ .Values.diagnosticsMode.copytoAzureBlob.containerName | quote }}
          - name: RPI__Diagnostics__CopyToAzure__BlobServiceEndpoint
            value: {{ .Values.diagnosticsMode.copytoAzureBlob.blobServiceEndpoint | quote }}
          - name: RPI__Diagnostics__CopyToAzure__EnableCdn
            value: {{ .Values.diagnosticsMode.copytoAzureBlob.enableCdn | quote }}
          - name: RPI__Diagnostics__CopyToAzure__AzureUseDataLakeStorageGen2
            value: {{ .Values.diagnosticsMode.copytoAzureBlob.UseDataLakeStorageGen2 | quote }}
          {{- end }}
          {{- if .Values.diagnosticsMode.copytoSftp.enabled }}
          - name: RPI__Diagnostics__CopyToSFTP__SecureFTPHost
            value: {{ .Values.diagnosticsMode.copytoSftp.sftpHost | quote }}
          - name: RPI__Diagnostics__CopyToSFTP__SecureFTPUsername
            value: {{ .Values.diagnosticsMode.copytoSftp.sftpUsername | quote }}
          - name: RPI__Diagnostics__CopyToSFTP__SecureFTPPassword
            value: {{ .Values.diagnosticsMode.copytoSftp.sftpPassword | quote }}
          - name: RPI__Diagnostics__CopyToSFTP__PortNumber
            value: {{ .Values.diagnosticsMode.copytoSftp.sftpPort | quote }}
          - name: RPI__Diagnostics__UseSFTP
            value: "true"
          - name: RPI__Diagnostics__CopyToSFTP__IsEnabled
            value: "true"
          {{- end }}
          {{- if .Values.diagnosticsMode.dotNetTools.enabled }}
          - name: RPI__Diagnostics__UseDotNetTools__Path
            value: "/app/.dotnet-tools"
          - name: RPI__Diagnostics__UseDotNetTools__UseCounters
            value: {{ .Values.diagnosticsMode.dotNetTools.useCounters | quote }}
          - name: RPI__Diagnostics__UseDotNetTools__CounterProviderList
            value: '["System.Runtime", "Microsoft.Extensions.Diagnostics.ResourceMonitoring"]'
          - name: RPI__Diagnostics__UseDotNetTools__UseGcDump
            value: {{ .Values.diagnosticsMode.dotNetTools.useGcDump | quote }}
          {{- end }}
          {{- if .Values.cloudIdentity.enabled }}
          {{- if eq .Values.cloudIdentity.provider "Azure" }}
          {{- if eq .Values.cloudIdentity.azureSettings.credentialsType "workloadIdentity" }}
          - name: CloudIdentity__Azure__CredentialType
            value: "AzureIdentity"
          - name: CloudIdentity__Azure__UseADTokenForDatabaseConnection
            value: {{ .Values.cloudIdentity.azureSettings.UseADTokenForDatabaseConnection | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.cloudIdentity.secretsManagement.enabled }}
          {{- if eq .Values.cloudIdentity.provider "Azure" }}
          - name: KeyVault__Provider
            value: "Azure"
          - name: KeyVault__UseForAppSettings
            value: {{ .Values.cloudIdentity.secretsManagement.UseForAppSettings | quote }}
          - name: KeyVault__UseForConfigPasswords
            value: {{ .Values.cloudIdentity.secretsManagement.UseForConfigPasswords | quote }}
          - name: KeyVault__AzureSettings__VaultURI
            value: {{ .Values.cloudIdentity.azureSettings.vaultUri | quote }}
          - name: KeyVault__AzureSettings__AppSettingsVaultURI
            value: {{ .Values.cloudIdentity.azureSettings.appSettingsVaultUri | quote }}
          - name: KeyVault__AzureSettings__ConfigurationReloadIntervalSeconds
            value: {{ .Values.cloudIdentity.secretsManagement.ConfigurationReloadIntervalSeconds | quote }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.global.deployment.platform "google" }}
          {{- if eq .Values.cloudIdentity.googleSettings.credentialsType "serviceAccount" }}
          - name: GOOGLE_APPLICATION_CREDENTIALS 
            value: "{{ .Values.cloudIdentity.googleSettings.ConfigMapFilePath }}/{{ .Values.cloudIdentity.googleSettings.keyName }}"
          {{- end }}
          {{- end }}
          {{- if .Values.cloudIdentity.secretsManagement.enabled }}
          {{- if eq .Values.cloudIdentity.provider "Google" }}
          - name: KeyVault__Provider
            value: "Google"
          - name: KeyVault__UseForAppSettings
            value: {{ .Values.cloudIdentity.secretsManagement.UseForAppSettings | quote }}
          - name: KeyVault__UseForConfigPasswords
            value: {{ .Values.cloudIdentity.secretsManagement.UseForConfigPasswords | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.cloudIdentity.enabled }}
          {{- if eq .Values.cloudIdentity.provider "Amazon" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "keyvault" }}
          - name: CloudIdentity__Amazon__AccessKeyId
            value: {{ .Values.cloudIdentity.amazonSettings.accessKeyId | quote }}
          - name: CloudIdentity__Amazon__SecretAccessKey
            value: {{ .Values.cloudIdentity.amazonSettings.secretAccessKey | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.cloudIdentity.secretsManagement.enabled }}
          {{- if eq .Values.cloudIdentity.provider "Amazon" }}
          - name: KeyVault__Provider
            value: "Amazon"
          - name: KeyVault__UseForAppSettings
            value: {{ .Values.cloudIdentity.secretsManagement.UseForAppSettings | quote }}
          - name: KeyVault__UseForConfigPasswords
            value: {{ .Values.cloudIdentity.secretsManagement.UseForConfigPasswords | quote }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.databases.operational.provider "sqlserver" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          - name: CONNECTIONSTRINGS__LOGGINGDATABASE
            valueFrom:
              secretKeyRef:
                key: ConnectionString_Logging_Database
                name: redpoint-rpi-secrets
          - name: CONNECTIONSTRINGS__OPERATIONALDATABASE
            valueFrom:
              secretKeyRef:
                key: ConnectionString_Operations_Database
                name: redpoint-rpi-secrets
          {{- end }} 
          {{- end }}
          {{- if eq .Values.databases.operational.provider "sqlserveronvm" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          - name: CONNECTIONSTRINGS__LOGGINGDATABASE
            valueFrom:
              secretKeyRef:
                key: ConnectionString_Logging_Database
                name: redpoint-rpi-secrets
          - name: CONNECTIONSTRINGS__OPERATIONALDATABASE
            valueFrom:
              secretKeyRef:
                key: ConnectionString_Operations_Database
                name: redpoint-rpi-secrets
          {{- end }}
          {{- end }}
          {{- if eq .Values.databases.operational.provider "postgresql" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          - name: CONNECTIONSTRINGS__LOGGINGDATABASE
            valueFrom:
              secretKeyRef:
                key: ConnectionString_Logging_Database
                name: redpoint-rpi-secrets
          - name: CONNECTIONSTRINGS__OPERATIONALDATABASE
            valueFrom:
              secretKeyRef:
                key: ConnectionString_Operations_Database
                name: redpoint-rpi-secrets
          {{- end }}
          {{- end }}
          {{- if eq .Values.databases.operational.provider "postgresql" }}
          - name: RPI_OperationalDatabaseType
            value: "PostgreSQL"
          {{- end }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.authentication.type "basic" }}
          - name: RealtimeAPIConfiguration__AppSettings__RPIAuthToken
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_Auth_Token
          - name: RealtimeAPIConfiguration__AppSettings__RealtimeAPIKey
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_Auth_Token
          - name: RealtimeAPIConfiguration__AppSettings__RealtimeAgentAuthToken
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_Auth_Token
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.authentication.type "oauth" }}
          - name: Authentication__EnableOAuth
            value: "true"
          - name: Authentication__EnableTransportSecurityRequirement
            value: "false"
          - name: Authentication__DisableHttpRedirect
            value: "true"
          - name: Authentication__RootServiceURL
            value: "https://{{ .Values.ingress.hosts.realtime }}.{{ .Values.ingress.domain }}"
          - name: Authentication__HttpMetaRootServiceURL
            value: "http://rpi-realtimeapi"
          - name: Authentication__AccessTokenLifetimeSeconds
            value: {{ .Values.realtimeapi.authentication.oauth.accessTokenLifetimeSeconds | quote }}
          - name: Authentication__RefreshTokenLifetimeSeconds
            value: {{ .Values.realtimeapi.authentication.oauth.refreshTokenLifetimeSeconds | quote }}
          {{- end }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.authentication.type "oauth" }}
          - name: ConnectionStrings__DefaultConnection
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: ConnectionString_RealtimeApi_OAuth
          {{- end }}
          {{- end }}
          {{- if eq .Values.databases.operational.provider "sqlserveronvm" }}
          {{- if eq .Values.realtimeapi.authentication.type "oauth" }}
          - name: Authentication__OAuthDBProvider
            value: "SQLServer"
          {{- end }}
          {{- end }}
          {{- if eq .Values.databases.operational.provider "sqlserver" }}
          {{- if eq .Values.realtimeapi.authentication.type "oauth" }}
          - name: Authentication__OAuthDBProvider
            value: "SQLServer"
          {{- end }}
          {{- end }}
          {{- if eq .Values.databases.operational.provider "postgresql" }}
          {{- if eq .Values.realtimeapi.authentication.type "oauth" }}
          - name: Authentication__OAuthDBProvider
            value: "PostgreSQL"
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__AppSettings__PluginAssemblyPath
            value: {{ .Values.storage.persistentVolumeClaims.Plugins.mountPath | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__IsWebFormProcessorOnly
            value: "false"
          - name: RealtimeAPIConfiguration__AppSettings__MessageDaysExpiry
            value: "30"
          - name: RealtimeAPIConfiguration__AppSettings__CheckForProfileUpdatesOnSave
            value: "false"
          {{- if eq .Values.realtimeapi.authentication.type "basic" }}
          - name: RealtimeAPIConfiguration__BasicAuthenticationRequireToken__Standard
            value: {{ .Values.realtimeapi.authentication.basic.standard | quote }}
          - name: RealtimeAPIConfiguration__BasicAuthenticationRequireToken__Forms
            value: {{ .Values.realtimeapi.authentication.basic.forms | quote }}
          - name: RealtimeAPIConfiguration__BasicAuthenticationRequireToken__ListenerQueue
            value: {{ .Values.realtimeapi.authentication.basic.listenerQueue | quote }}
          - name: RealtimeAPIConfiguration__BasicAuthenticationRequireToken__Recommendations
            value: {{ .Values.realtimeapi.authentication.basic.recommendations | quote }}
          {{- end }}
          - name: RealtimeAPIConfiguration__AppSettings__RealtimeServerCookieEnabled
            value: {{ .Values.realtimeapi.RealtimeServerCookieEnabled | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__ThresholdBetweenSiteVisitsMinutes
            value: {{ .Values.realtimeapi.ThresholdBetweenSiteVisitsMinutes | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__ThresholdBetweenPageVisitsMinutes
            value: {{ .Values.realtimeapi.ThresholdBetweenPageVisitsMinutes | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__CacheOutputCollectIPAddress
            value: {{ .Values.realtimeapi.CacheOutputCollectIPAddress | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__HashVisitorID
            value: {{ .Values.realtimeapi.HashVisitorID | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__EventListeningLocalCacheDuration
            value: {{ .Values.realtimeapi.EventListeningLocalCacheDuration | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__RealtimeServerCookieHttpOnly
            value: {{ .Values.realtimeapi.RealtimeServerCookieHttpOnly | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__RealtimeServerCookieName
            value: {{ .Values.realtimeapi.RealtimeServerCookieName | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__RealtimeServerCookieExpires
            value: {{ .Values.realtimeapi.RealtimeServerCookieExpires | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__RealtimeServerCookieDomain
            value: {{ .Values.realtimeapi.RealtimeServerCookieDomain | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__RealtimeAgentInProcessEnabled
            value: "true"
          - name: RealtimeAPIConfiguration__AppSettings__NoDaysPersistWebEvents
            value: "365"
          - name: RealtimeAPIConfiguration__Queues__CacheOutputQueueEnabled
            value: {{ .Values.realtimeapi.cacheOutputQueueEnabled | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__CacheWebFormData
            value: {{ .Values.realtimeapi.CacheWebFormData | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__EnableHelpPages
            value: {{ .Values.realtimeapi.enableHelpPages | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__CORSOrigins
            value: {{ .Values.realtimeapi.CORSOrigins | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__DecisionCacheDuration
            value: {{ .Values.realtimeapi.decisionCacheDuration | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__RPIClientID
            value: {{ .Values.realtimeapi.rpiClientID | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__EnableAuditMetricsInHeaders
            value: {{ .Values.realtimeapi.enableAuditMetricsInHeaders | quote }}
          - name: RealtimeAPIConfiguration__AppSettings__EnableEventListening
            value: {{ .Values.realtimeapi.enableEventListening | quote }}
          {{- if eq .Values.global.deployment.platform "azure" }}
          - name: RealtimeAPIConfiguration__Queues__FormQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.formQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__EventsQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.eventsQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__CacheOutputQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.cacheOutputQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__RecommendationsQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.recommendationsQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.listenerQueuePath | quote }}
          {{- end }}
          {{- if eq .Values.global.deployment.platform "amazon" }}
          - name: RealtimeAPIConfiguration__Queues__FormQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.formQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__EventsQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.eventsQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__CacheOutputQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.cacheOutputQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__RecommendationsQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.recommendationsQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.listenerQueuePath | quote }}
          {{- end }}
          {{- if eq .Values.global.deployment.platform "google" }}
          - name: RealtimeAPIConfiguration__Queues__FormQueuePath
            value: "{{ .Values.realtimeapi.queueProvider.queueNames.formQueuePath }}/{{ .Values.realtimeapi.queueProvider.queueNames.formQueuePath }}"
          - name: RealtimeAPIConfiguration__Queues__EventsQueuePath
            value: "{{ .Values.realtimeapi.queueProvider.queueNames.eventsQueuePath }}/{{ .Values.realtimeapi.queueProvider.queueNames.eventsQueuePath }}"
          - name: RealtimeAPIConfiguration__Queues__CacheOutputQueuePath
            value: "{{ .Values.realtimeapi.queueProvider.queueNames.cacheOutputQueuePath }}/{{ .Values.realtimeapi.queueProvider.queueNames.cacheOutputQueuePath }}"
          - name: RealtimeAPIConfiguration__Queues__RecommendationsQueuePath
            value: "{{ .Values.realtimeapi.queueProvider.queueNames.recommendationsQueuePath }}/{{ .Values.realtimeapi.queueProvider.queueNames.recommendationsQueuePath }}"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueuePath
            value: "{{ .Values.realtimeapi.queueProvider.queueNames.listenerQueuePath }}/{{ .Values.realtimeapi.queueProvider.queueNames.listenerQueuePath }}"
          {{- end }}
          {{- if eq .Values.global.deployment.platform "selfhosted" }}
          - name: RealtimeAPIConfiguration__Queues__FormQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.formQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__EventsQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.eventsQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__CacheOutputQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.cacheOutputQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__RecommendationsQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.recommendationsQueuePath | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueuePath
            value: {{ .Values.realtimeapi.queueProvider.queueNames.listenerQueuePath | quote }}
          {{- end }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonsqs" }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Assembly
            value: "RedPoint.Amazon.Server"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Type
            value: "RedPoint.Amazon.Server.AWSQueue.SQSQueueFactory"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Key
            value: "AccessKey"
          {{- if eq .Values.realtimeapi.queueProvider.amazonsqs.credentialsType "accessKey" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonsqs" }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_QueueSettings_AccessKey
          {{- end }}
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Key
            value: "SecretKey"
          {{- if eq .Values.realtimeapi.queueProvider.amazonsqs.credentialsType "accessKey" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonsqs" }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_QueueSettings_SecretKey
          {{- end }}
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__2__Key
            value: "RegionEndpoint"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__2__Value
            value: {{ .Values.cloudIdentity.amazonSettings.region | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Assembly
            value: "RedPoint.Amazon.Server"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Type
            value: "RedPoint.Amazon.Server.AWSQueue.SQSQueueFactory"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Key
            value: "AccessKey"
          {{- if eq .Values.realtimeapi.queueProvider.amazonsqs.credentialsType "accessKey" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonsqs" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_QueueSettings_AccessKey
          {{- end }}
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Key
            value: "SecretKey"
          {{- if eq .Values.realtimeapi.queueProvider.amazonsqs.credentialsType "accessKey" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonsqs" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_QueueSettings_SecretKey
          {{- end }}
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__2__Key
            value: "RegionEndpoint"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__2__Value
            value: {{ .Values.cloudIdentity.amazonSettings.region | quote }}
          {{- end }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "azureservicebus" }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Assembly
            value: "RedPoint.Azure.Server"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Type
            value: "RedPoint.Azure.Server.AzureQueue.AzureServiceBusQueueFactory"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Key
            value: "QueueType"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Value
            value: "ServiceBus"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Key
            value: "ConnectionString"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Assembly
            value: "RedPoint.Azure.Server"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Type
            value: "RedPoint.Azure.Server.AzureQueue.AzureServiceBusQueueFactory"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Key
            value: "QueueType"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Value
            value: "ServiceBus"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Key
            value: "ConnectionString"
          {{- end }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "azureservicebus" }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_ServiceBus_ConnectionString
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "azureservicebus" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_ServiceBus_ConnectionString
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "googlepubsub" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Assembly
            value: "RedPoint.Google.Server"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Type
            value: "RedPoint.Google.Server.GooglePubSub.GooglePubSubFactory"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Key
            value: "ProjectId"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Value
            value: {{ .Values.realtimeapi.queueProvider.googlepubsub.projectId | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Assembly
            value: "RedPoint.Google.Server"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Type
            value: "RedPoint.Google.Server.GooglePubSub.GooglePubSubFactory"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Key
            value: "ProjectId"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Value
            value: {{ .Values.realtimeapi.queueProvider.googlepubsub.projectId | quote }}
          {{- end }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "mongodb" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Name
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Assembly
            value: "RedPoint.Resonance.MongoDBCache"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Class
            value: "RedPoint.Resonance.MongoDBCache.MongoDBCacheHandler"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Key
            value: "Database"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Value
            value: {{ .Values.realtimeapi.cacheProvider.mongodb.databaseName | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__1__Key
            value: "ConnectionString"
          {{- end }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "mongodb" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__1__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_MongoCache_ConnectionString
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "mongodb" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__2__Key
            value: "CollectionName"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__2__Value
            value: {{ .Values.realtimeapi.cacheProvider.mongodb.collectionName | quote }}
          {{- end }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "googlebigtable" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Name
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Assembly
            value: "RedPoint.Google.Server"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Class
            value: "RedPoint.Google.Server.GoogleBigTableCache.GoogleBigTableCacheHandler"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Key
            value: "ProjectId"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Value
            value: {{ .Values.realtimeapi.cacheProvider.googlebigtable.projectId | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__1__Key
            value: "InstanceId"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__1__Value
            value: {{ .Values.realtimeapi.cacheProvider.googlebigtable.instanceId | quote }}
          {{- end }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "inMemorySql" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Name
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Assembly
            value: "RedPoint.Resonance.Web.Shared"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Class
            value: "RedPoint.Resonance.Web.Shared.Cache.SQLServerCache"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Key
            value: "ConnectionString"
          {{- end }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "inMemorySql" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_inMemorySql_ConnectionString
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "azureeventhubs" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Assembly
            value: "RedPoint.Azure.Server"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Type
            value: "RedPoint.Azure.Server.AzureEventHubs.AzureEventHubsFactory"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Key
            value: "EventHubName"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Value
            value: {{ .Values.realtimeapi.queueProvider.azureeventhubs.eventHubName | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Key
            value: "EventHubConnectionString"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Assembly
            value: "RedPoint.Azure.Server"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Type
            value: "RedPoint.Azure.Server.AzureEventHubs.AzureEventHubsFactory"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Key
            value: "EventHubName"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Value
            value: {{ .Values.realtimeapi.queueProvider.azureeventhubs.eventHubName | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Key
            value: "EventHubConnectionString"
          {{- end }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "azureeventhubs" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_EventHub_ConnectionString
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_EventHub_ConnectionString
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "rabbitmq" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Assembly
            value: "RedPoint.Resonance.RabbitMQAccess"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Type
            value: "RedPoint.Resonance.RabbitMQAccess.RabbitMQFactory"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Key
            value: "Hostname"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Value
            value: {{ .Values.realtimeapi.queueProvider.rabbitmq.hostname | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Key
            value: "VirtualHost"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Value
            value: {{ .Values.realtimeapi.queueProvider.rabbitmq.virtualHost | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__2__Key
            value: "Username"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__2__Value
            value: {{ .Values.realtimeapi.queueProvider.rabbitmq.username | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__3__Key
            value: "Password"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Assembly
            value: "RedPoint.Resonance.RabbitMQAccess"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Type
            value: "RedPoint.Resonance.RabbitMQAccess.RabbitMQFactory"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Key
            value: "Hostname"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Value
            value: {{ .Values.realtimeapi.queueProvider.rabbitmq.hostname | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Key
            value: "VirtualHost"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Value
            value: {{ .Values.realtimeapi.queueProvider.rabbitmq.virtualHost | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__2__Key
            value: "Username"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__2__Value
            value: {{ .Values.realtimeapi.queueProvider.rabbitmq.username | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__3__Key
            value: "Password"
          {{- end }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "rabbitmq" }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__3__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RABBITMQ_Password
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__3__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RABBITMQ_Password
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "redis" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Name
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Assembly
            value: "RedPoint.Resonance.RedisCache"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Class
            value: "RedPoint.Resonance.RedisCache.RedisCacheHandler"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Key
            value: "IPAddress"
          {{- end }}
          {{- end }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "redis" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_RedisCache_ConnectionString
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "azureredis" }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Name
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Assembly
            value: "RedPoint.Azure.Server"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Class
            value: "RedPoint.Azure.Server.AzureRedisCache.AzureRedisCacheHandler"
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Key
            value: "ConnectionString"
          {{- end }}
          {{- end }}
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.cacheProvider.provider "azureredis" }}
          - name: RealtimeAPIConfiguration__CacheSettings__Caches__0__Settings__0__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_RedisCache_ConnectionString
          {{- end }}
          {{- end }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonmsk" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Assembly
            value: "RedPoint.Resonance.KafkaQueueAccess"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Type
            value: "RedPoint.Resonance.KafkaQueueAccess.KafkaQueueFactory"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Key
            value: "BootstrapServers"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__0__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.bootstrapServers | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Key
            value: "Acks"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__1__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.Acks | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__2__Key
            value: "CompressionType"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__2__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.CompressionType | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__3__Key
            value: "MaxRetryAttempt"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__3__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.MaxRetryAttempt | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__4__Key
            value: "BatchSize"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__4__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.BatchSize | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__5__Key
            value: "LingerTime"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__5__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.LingerTime | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__6__Key
            value: "UseAwsMsk"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__6__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.UseAwsMsk | quote }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__7__Key
            value: "AccessKey"
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonmsk" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__7__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_QueueSettings_AccessKey
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__8__Key
            value: "SecretKey"
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonmsk" }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__8__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_QueueSettings_SecretKey
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__9__Key
            value: "RegionEndpoint"
          - name: RealtimeAPIConfiguration__Queues__ClientQueueSettings__Settings__9__Value
            value: {{ .Values.cloudIdentity.amazonSettings.region | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Assembly
            value: "RedPoint.Resonance.KafkaQueueAccess"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Type
            value: "RedPoint.Resonance.KafkaQueueAccess.KafkaQueueFactory"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Key
            value: "BootstrapServers"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__0__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.bootstrapServers | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Key
            value: "Acks"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__1__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.Acks | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__2__Key
            value: "CompressionType"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__2__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.CompressionType | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__3__Key
            value: "MaxRetryAttempt"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__3__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.MaxRetryAttempt | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__4__Key
            value: "BatchSize"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__4__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.BatchSize | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__5__Key
            value: "LingerTime"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__5__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.LingerTime | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__6__Key
            value: "UseAwsMsk"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__6__Value
            value: {{ .Values.realtimeapi.queueProvider.amazonmsk.UseAwsMsk | quote }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__7__Key
            value: "AccessKey"
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonmsk" }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__7__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_QueueSettings_AccessKey
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__8__Key
            value: "SecretKey"
          {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
          {{- if eq .Values.realtimeapi.queueProvider.provider "amazonmsk" }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__8__Value
            valueFrom:
              secretKeyRef:
                name: redpoint-rpi-secrets
                key: RealtimeAPI_QueueSettings_SecretKey
          {{- end }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__9__Key
            value: "RegionEndpoint"
          - name: RealtimeAPIConfiguration__Queues__ListenerQueueSettings__Settings__9__Value
            value: {{ .Values.cloudIdentity.amazonSettings.region | quote }}
          {{- end }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__0__Type
            value: "Visitor Profile"
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__0__Cache
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__0__DaysToPersist
            value: {{ .Values.realtimeapi.dataMaps.visitorProfile.DaysToPersist | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__0__CompressData
            value: {{ .Values.realtimeapi.dataMaps.visitorProfile.CompressData | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__1__Type
            value: "Visitor History"
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__1__Cache
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__1__DaysToPersist
            value: {{ .Values.realtimeapi.dataMaps.visitorHistory.DaysToPersist | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__1__CompressData
            value: {{ .Values.realtimeapi.dataMaps.visitorHistory.CompressData | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__2__Type
            value: "Non Visitor Data"
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__2__Cache
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__2__DaysToPersist
            value: {{ .Values.realtimeapi.dataMaps.nonVisitorData.DaysToPersist | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__2__CompressData
            value: {{ .Values.realtimeapi.dataMaps.nonVisitorData.CompressData | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__3__Type
            value: "Product Recommendations"
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__3__Cache
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__3__DaysToPersist
            value: {{ .Values.realtimeapi.dataMaps.productRecommendation.DaysToPersist | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__3__CompressData
            value: {{ .Values.realtimeapi.dataMaps.productRecommendation.CompressData | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__4__Type
            value: "Message History"
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__4__Cache
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__4__DaysToPersist
            value: {{ .Values.realtimeapi.dataMaps.messageHistory.DaysToPersist | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__4__CompressData
            value: {{ .Values.realtimeapi.dataMaps.messageHistory.CompressData | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__5__Type
            value: "Offer History"
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__5__Cache
            value: {{ .Values.realtimeapi.cacheProvider.provider | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__5__DaysToPersist
            value: {{ .Values.realtimeapi.dataMaps.offerHistory.DaysToPersist | quote }}
          - name: RealtimeAPIConfiguration__CacheSettings__DataMaps__5__CompressData
            value: {{ .Values.realtimeapi.dataMaps.offerHistory.CompressData | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__EnableVisitorIDValidation
            value: {{ .Values.realtimeapi.idValidation.enableVisitorIDValidation | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__VisitorID__MinimumLength
            value: {{ .Values.realtimeapi.idValidation.visitorID.minimumLength | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__VisitorID__MaximumLength
            value: {{ .Values.realtimeapi.idValidation.visitorID.maximumLength | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__VisitorID__EnableLetters
            value: {{ .Values.realtimeapi.idValidation.visitorID.enableLetters | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__VisitorID__EnableNumbers
            value: {{ .Values.realtimeapi.idValidation.visitorID.enableNumbers | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__VisitorID__PermittedCharacters
            value: '{{ toJson .Values.realtimeapi.idValidation.visitorID.permittedCharacters }}'
          - name: RealtimeAPIConfiguration__IDValidationSettings__EnableDeviceIDValidation
            value: {{ .Values.realtimeapi.idValidation.enableDeviceIDValidation | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__DeviceID__MinimumLength
            value: {{ .Values.realtimeapi.idValidation.deviceID.minimumLength | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__DeviceID__MaximumLength
            value: {{ .Values.realtimeapi.idValidation.deviceID.maximumLength | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__DeviceID__EnableLetters
            value: {{ .Values.realtimeapi.idValidation.deviceID.enableLetters | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__DeviceID__EnableNumbers
            value: {{ .Values.realtimeapi.idValidation.deviceID.enableNumbers | quote }}
          - name: RealtimeAPIConfiguration__IDValidationSettings__DeviceID__PermittedCharacters
            value: '{{ toJson .Values.realtimeapi.idValidation.deviceID.permittedCharacters }}'
          {{- if .Values.realtimeapi.customPlugins.enabled }}
          {{- range $pIndex, $plugin := .Values.realtimeapi.customPlugins.list }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Name
            value: {{ $plugin.name | quote }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Factory__Assembly
            value: {{ $plugin.factory.assembly | quote }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Factory__Type
            value: {{ $plugin.factory.type | quote }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Type__Name
            value: {{ $plugin.type.name | quote }}
          {{- range $fIndex, $filter := $plugin.type.apiContextFilters }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Type__ApiContextFilters__{{ $fIndex }}
            value: {{ $filter | quote }}
          {{- end }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Type__ApiContentFilterOperator
            value: {{ $plugin.type.apiContentFilterOperator | quote }}
          {{- range $sIndex, $setting := $plugin.settings }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Settings__{{ $sIndex }}__Key
            value: {{ $setting.key | quote }}
          {{- if hasKey $setting "value" }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Settings__{{ $sIndex }}__Value
            value: {{ $setting.value | quote }}
          {{- else if hasKey $setting "values" }}
            {{- range $vIndex, $val := $setting.values }}
          - name: RealtimeAPIConfiguration__Plugins__{{ $pIndex }}__Settings__{{ $sIndex }}__Values__{{ $vIndex }}
            value: {{ $val | quote }}
            {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          volumeMounts:
            {{- if eq .Values.databases.datawarehouse.provider "redshift" }}
            {{- if .Values.databases.datawarehouse.enabled }}
            - name: odbc-config
              mountPath: /app/odbc-config/odbc2.ini
              subPath: odbc2.ini
            {{- end }}
            {{- end }}
            {{- if eq .Values.databases.datawarehouse.provider "bigquery" }}
            {{- if .Values.databases.datawarehouse.enabled }}
            - name: odbc-config
              mountPath: /app/odbc-config/odbc2.ini
              subPath: odbc2.ini
            {{- end }}
            {{- end }}
            {{- if eq .Values.databases.datawarehouse.provider "bigquery" }}
            {{- if .Values.databases.datawarehouse.enabled }}
            {{- if eq .Values.databases.datawarehouse.bigquery.credentialsType "serviceAccount" }}
            - name: {{ .Values.databases.datawarehouse.bigquery.configMapName | quote }}
              mountPath: "{{ .Values.databases.datawarehouse.bigquery.ConfigMapFilePath }}/{{ .Values.databases.datawarehouse.bigquery.keyName }}"
              subPath: "{{ .Values.databases.datawarehouse.bigquery.keyName }}"
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if eq .Values.databases.datawarehouse.provider "snowflake" }}
            {{- if .Values.databases.datawarehouse.enabled }}
            - name: snowflake-creds
              mountPath: {{ .Values.databases.datawarehouse.snowflake.ConfigMapFilePath }}/{{ .Values.databases.datawarehouse.snowflake.keyName }}
              subPath: {{ .Values.databases.datawarehouse.snowflake.keyName }}
            {{- end }}
            {{- end }}
            {{- if .Values.storage.persistentVolumeClaims.FileOutputDirectory.enabled }}    
            - name: fileoutputdirectory
              mountPath: {{  .Values.storage.persistentVolumeClaims.FileOutputDirectory.mountPath }}
            {{- end }}
            {{- if .Values.storage.persistentVolumeClaims.Plugins.enabled }}  
            - name: realtimeplugins
              mountPath: {{ .Values.storage.persistentVolumeClaims.Plugins.mountPath }}
            {{- end }}
            {{- if .Values.storage.persistentVolumeClaims.DataManagementUploadDirectory.enabled }} 
            - name: rpdmuploaddirectory
              mountPath: {{ .Values.storage.persistentVolumeClaims.DataManagementUploadDirectory.mountPath }}
            {{- end }}
      volumes:
        {{- if eq .Values.databases.datawarehouse.provider "redshift" }}
        {{- if .Values.databases.datawarehouse.enabled }}
        - name: odbc-config
          configMap:
            name: odbc-config
        {{- end }}
        {{- end }}
        {{- if eq .Values.databases.datawarehouse.provider "bigquery" }}
        {{- if .Values.databases.datawarehouse.enabled }}
        - name: odbc-config
          configMap:
            name: odbc-config
        {{- end }}
        {{- end }}
        {{- if eq .Values.databases.datawarehouse.provider "snowflake" }}
        {{- if .Values.databases.datawarehouse.enabled }}
        - name: snowflake-creds
          configMap:
            name: {{ .Values.databases.datawarehouse.snowflake.ConfigMapName }}
        {{- end }}
        {{- end }}
        {{- if eq .Values.databases.datawarehouse.provider "bigquery" }}
        {{- if .Values.databases.datawarehouse.enabled }}
        {{- if eq .Values.databases.datawarehouse.bigquery.credentialsType "serviceAccount" }}
        - name: {{ .Values.databases.datawarehouse.bigquery.configMapName | quote }}
          configMap:
            name: {{ .Values.databases.datawarehouse.bigquery.configMapName | quote }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .Values.storage.persistentVolumeClaims.FileOutputDirectory.enabled }}
        - name: fileoutputdirectory
          persistentVolumeClaim:
            claimName: {{ .Values.storage.persistentVolumeClaims.FileOutputDirectory.claimName }}
        {{- end }}
        {{- if .Values.storage.persistentVolumeClaims.Plugins.enabled }}
        - name: realtimeplugins
          persistentVolumeClaim:
            claimName: {{ .Values.storage.persistentVolumeClaims.Plugins.claimName }}
        {{- end }}
        {{- if .Values.storage.persistentVolumeClaims.DataManagementUploadDirectory.enabled }}
        - name: rpdmuploaddirectory
          persistentVolumeClaim:
            claimName: {{ .Values.storage.persistentVolumeClaims.DataManagementUploadDirectory.claimName }}
        {{- end }}
      {{- if .Values.nodeSelector.enabled }}
      nodeSelector:
        {{ .Values.nodeSelector.key }}: {{ .Values.nodeSelector.value }}
      {{- end }}
      {{- if .Values.tolerations.enabled }}
      tolerations:
        - effect: NoSchedule
          key: {{ .Values.nodeSelector.key }}
          operator: Equal
          value: {{ .Values.nodeSelector.value }}
      {{- end }}
{{- end }}