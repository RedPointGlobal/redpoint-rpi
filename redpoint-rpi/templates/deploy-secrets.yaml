# ========================== sqlserver
{{- if eq .Values.databases.operational.provider "sqlserver" }}
{{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
{{- if .Values.cloudIdentity.secretsManagement.autoCreateSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.cloudIdentity.secretsManagement.secretName | quote }}
  namespace: {{ .Release.Namespace }}
data:
  ConnectionString_Logging_Database: {{ printf "Server=tcp:%s,1433;Database=%s;User ID=%s;Password=%s;Encrypt=True;TrustServerCertificate=True;Connection Timeout=30;" .Values.databases.operational.server_host .Values.databases.operational.pulse_logging_database_name .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  ConnectionString_Operations_Database: {{ printf "Server=tcp:%s,1433;Database=%s;User ID=%s;Password=%s;Encrypt=True;TrustServerCertificate=True;Connection Timeout=30;" .Values.databases.operational.server_host .Values.databases.operational.pulse_database_name .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  {{- if eq .Values.realtimeapi.authentication.type "oauth" }}
  ConnectionString_RealtimeApi_OAuth: {{ printf "Server=tcp:%s,1433;Database=%s;User ID=%s;Password=%s;Encrypt=True;TrustServerCertificate=True;Connection Timeout=30;" .Values.databases.operational.server_host .Values.realtimeapi.authentication.oauth.databaseName .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  {{- end }}
  Operations_Database_Server_Password: {{ .Values.databases.operational.server_password | b64enc }}
  {{- if .Values.realtimeapi.cacheProvider.enabled }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "mongodb" }}
  RealtimeAPI_MongoCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.mongodb.connectionString | b64enc }}
  RealtimeAPI_MongoCache_ConnectionKey: {{ "ConnectionString" | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.queuereader.realtimeConfiguration.isDistributed }}
  RealtimeAPI_RedisCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.redis.connectionstring | b64enc }}
  {{- end }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "rabbitmq" }}
  {{- if not .Values.realtimeapi.queueProvider.rabbitmq.internal }}
  RABBITMQ_Password: {{ .Values.realtimeapi.queueProvider.rabbitmq.password | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.rabbitmq.internal }}
  RABBITMQ_Password: {{ .Values.realtimeapi.queueProvider.rabbitmq.password | b64enc }}
  {{- end }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "redis" }}
  {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
  RealtimeAPI_RedisCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.redis.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.cacheProvider.enabled }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "inMemorySql" }}
  RealtimeAPI_inMemorySql_ConnectionString: {{ printf "Data Source=%s;Initial Catalog=%s;uid=%s;pwd=%s;TrustServerCertificate=True" .Values.realtimeapi.cacheProvider.inMemorySql.server_host .Values.realtimeapi.cacheProvider.inMemorySql.database_name .Values.realtimeapi.cacheProvider.inMemorySql.username .Values.realtimeapi.cacheProvider.inMemorySql.password | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.amazonsqs.credentialsType "accessKey" }}
  RealtimeAPI_QueueSettings_AccessKey: {{ .Values.cloudIdentity.amazonSettings.accessKeyId | b64enc }}
  RealtimeAPI_QueueSettings_SecretKey: {{ .Values.cloudIdentity.amazonSettings.secretAccessKey | b64enc }}
  RealtimeAPI_QueueSettings_0_Key: {{ "AccessKey" | b64enc }}
  RealtimeAPI_QueueSettings_1_Key: {{ "SecretKey" | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.enabled }}
  {{- if eq .Values.realtimeapi.authentication.type "basic" }}
  RealtimeAPI_Auth_Token: {{ .Values.realtimeapi.authentication.basic.authToken | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "azureservicebus" }}
  RealtimeAPI_ServiceBus_ConnectionString: {{ .Values.realtimeapi.queueProvider.azureservicebus.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "azureeventhubs" }}
  RealtimeAPI_EventHub_ConnectionString: {{ .Values.realtimeapi.queueProvider.azureeventhubs.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.redpointAI.enabled }}
  RPI_NLP_SEARCH_KEY: {{ .Values.redpointAI.cognitiveSearch.SearchKey | b64enc }}
  RPI_NLP_API_KEY: {{ .Values.redpointAI.naturalLanguage.ApiKey | b64enc }}
  RPI_NLP_MODEL_CONNECTION_STRING: {{ .Values.redpointAI.modelStorage.ConnectionString | b64enc }}
  {{- end }}
  {{- if .Values.SMTPSettings.UseCredentials }}
  SMTP_Password: {{ .Values.SMTPSettings.SMTP_Password | b64enc }}
  {{- end }}
type: Opaque
{{- end }}
{{- end }}
{{- end }}

# ==========================  Postgresql
---
{{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
{{- if .Values.cloudIdentity.secretsManagement.autoCreateSecrets }}
{{- if eq .Values.databases.operational.provider "postgresql" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.cloudIdentity.secretsManagement.secretName | quote }}
  namespace: {{ .Release.Namespace }}
data:
  ConnectionString_Logging_Database: {{ printf "PostgreSQL:Server=%s;Database=%s;User Id=%s;Password=%s;" .Values.databases.operational.server_host .Values.databases.operational.pulse_logging_database_name .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  ConnectionString_Operations_Database: {{ printf "PostgreSQL:Server=%s;Database=%s;User Id=%s;Password=%s;" .Values.databases.operational.server_host .Values.databases.operational.pulse_database_name .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  {{- if eq .Values.realtimeapi.authentication.type "oauth" }}
  ConnectionString_RealtimeApi_OAuth: {{ printf "PostgreSQL:Server=%s;Database=%s;User Id=%s;Password=%s;" .Values.databases.operational.server_host .Values.realtimeapi.authentication.oauth.databaseName .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  {{- end }}
  Operations_Database_Server_Password: {{ .Values.databases.operational.server_password | b64enc }}
  {{- if .Values.realtimeapi.cacheProvider.enabled }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "mongodb" }}
  RealtimeAPI_MongoCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.mongodb.connectionString | b64enc }}
  RealtimeAPI_MongoCache_ConnectionKey: {{ "ConnectionString" | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.queuereader.realtimeConfiguration.isDistributed }}
  RealtimeAPI_RedisCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.redis.connectionstring | b64enc }}
  {{- end }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "rabbitmq" }}
  {{- if not .Values.realtimeapi.queueProvider.rabbitmq.internal }}
  RABBITMQ_Password: {{ .Values.realtimeapi.queueProvider.rabbitmq.password | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.rabbitmq.internal }}
  RABBITMQ_Password: {{ .Values.realtimeapi.queueProvider.rabbitmq.password | b64enc }}
  {{- end }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "redis" }}
  {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
  RealtimeAPI_RedisCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.redis.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.cacheProvider.enabled }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "inMemorySql" }}
  RealtimeAPI_inMemorySql_ConnectionString: {{ printf "Data Source=%s;Initial Catalog=%s;uid=%s;pwd=%s;TrustServerCertificate=True" .Values.realtimeapi.cacheProvider.inMemorySql.server_host .Values.realtimeapi.cacheProvider.inMemorySql.database_name .Values.realtimeapi.cacheProvider.inMemorySql.username .Values.realtimeapi.cacheProvider.inMemorySql.password | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.amazonsqs.credentialsType "accessKey" }}
  RealtimeAPI_QueueSettings_AccessKey: {{ .Values.cloudIdentity.amazonSettings.accessKeyId | b64enc }}
  RealtimeAPI_QueueSettings_SecretKey: {{ .Values.cloudIdentity.amazonSettings.secretAccessKey | b64enc }}
  RealtimeAPI_QueueSettings_0_Key: {{ "AccessKey" | b64enc }}
  RealtimeAPI_QueueSettings_1_Key: {{ "SecretKey" | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.enabled }}
  {{- if eq .Values.realtimeapi.authentication.type "basic" }}
  RealtimeAPI_Auth_Token: {{ .Values.realtimeapi.authentication.basic.authToken | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "azureservicebus" }}
  RealtimeAPI_ServiceBus_ConnectionString: {{ .Values.realtimeapi.queueProvider.azureservicebus.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "azureeventhubs" }}
  RealtimeAPI_EventHub_ConnectionString: {{ .Values.realtimeapi.queueProvider.azureeventhubs.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.redpointAI.enabled }}
  RPI_NLP_SEARCH_KEY: {{ .Values.redpointAI.cognitiveSearch.SearchKey | b64enc }}
  RPI_NLP_API_KEY: {{ .Values.redpointAI.naturalLanguage.ApiKey | b64enc }}
  RPI_NLP_MODEL_CONNECTION_STRING: {{ .Values.redpointAI.modelStorage.ConnectionString | b64enc }}
  {{- end }}
  {{- if .Values.SMTPSettings.UseCredentials }}
  SMTP_Password: {{ .Values.SMTPSettings.SMTP_Password | b64enc }}
  {{- end }}
type: Opaque
{{- end }}
{{- end }}
{{- end }}

# ========================== sqlserver on vm
---
{{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
{{- if .Values.cloudIdentity.secretsManagement.autoCreateSecrets }}
{{- if eq .Values.databases.operational.provider "sqlserveronvm" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.cloudIdentity.secretsManagement.secretName | quote }}
  namespace: {{ .Release.Namespace }}
data:
  {{- if not .Values.databases.operational.encrypt }}
  ConnectionString_Logging_Database: {{ printf "Server=%s,1433;Database=%s;uid=%s;pwd=%s;ConnectRetryCount=12;ConnectRetryInterval=10;TrustServerCertificate=True;" .Values.databases.operational.server_host .Values.databases.operational.pulse_logging_database_name .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  ConnectionString_Operations_Database: {{ printf "Server=%s,1433;Database=%s;uid=%s;pwd=%s;ConnectRetryCount=12;ConnectRetryInterval=10;TrustServerCertificate=True;" .Values.databases.operational.server_host .Values.databases.operational.pulse_database_name .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  {{- end }}
  {{- if .Values.databases.operational.encrypt }}
  ConnectionString_Logging_Database: {{ printf "Server=%s,1433;Database=%s;uid=%s;pwd=%s;ConnectRetryCount=12;ConnectRetryInterval=10;Encrypt=True;TrustServerCertificate=True;" .Values.databases.operational.server_host .Values.databases.operational.pulse_logging_database_name .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  ConnectionString_Operations_Database: {{ printf "Server=%s,1433;Database=%s;uid=%s;pwd=%s;ConnectRetryCount=12;ConnectRetryInterval=10;Encrypt=True;TrustServerCertificate=True;" .Values.databases.operational.server_host .Values.databases.operational.pulse_database_name .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  {{- end }}
  {{- if eq .Values.realtimeapi.authentication.type "oauth" }}
  ConnectionString_RealtimeApi_OAuth: {{ printf "Server=%s,1433;Database=%s;uid=%s;pwd=%s;ConnectRetryCount=12;ConnectRetryInterval=10;Encrypt=True;TrustServerCertificate=True;" .Values.databases.operational.server_host .Values.realtimeapi.authentication.oauth.databaseName .Values.databases.operational.server_username .Values.databases.operational.server_password | b64enc }}
  {{- end }}
  Operations_Database_Server_Password: {{ .Values.databases.operational.server_password | b64enc }}
  {{- if .Values.realtimeapi.cacheProvider.enabled }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "mongodb" }}
  RealtimeAPI_MongoCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.mongodb.connectionString | b64enc }}
  RealtimeAPI_MongoCache_ConnectionKey: {{ "ConnectionString" | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.queuereader.realtimeConfiguration.isDistributed }}
  RealtimeAPI_RedisCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.redis.connectionstring | b64enc }}
  {{- end }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "rabbitmq" }}
  {{- if not .Values.realtimeapi.queueProvider.rabbitmq.internal }}
  RABBITMQ_Password: {{ .Values.realtimeapi.queueProvider.rabbitmq.password | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.rabbitmq.internal }}
  RABBITMQ_Password: {{ .Values.realtimeapi.queueProvider.rabbitmq.password | b64enc }}
  {{- end }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "redis" }}
  {{- if eq .Values.cloudIdentity.secretsManagement.secretsProvider "kubernetes" }}
  RealtimeAPI_RedisCache_ConnectionString: {{ .Values.realtimeapi.cacheProvider.redis.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.cacheProvider.enabled }}
  {{- if eq .Values.realtimeapi.cacheProvider.provider "inMemorySql" }}
  RealtimeAPI_inMemorySql_ConnectionString: {{ printf "Data Source=%s;Initial Catalog=%s;uid=%s;pwd=%s;TrustServerCertificate=True" .Values.realtimeapi.cacheProvider.inMemorySql.server_host .Values.realtimeapi.cacheProvider.inMemorySql.database_name .Values.realtimeapi.cacheProvider.inMemorySql.username .Values.realtimeapi.cacheProvider.inMemorySql.password | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.amazonsqs.credentialsType "accessKey" }}
  RealtimeAPI_QueueSettings_AccessKey: {{ .Values.cloudIdentity.amazonSettings.accessKeyId | b64enc }}
  RealtimeAPI_QueueSettings_SecretKey: {{ .Values.cloudIdentity.amazonSettings.secretAccessKey | b64enc }}
  RealtimeAPI_QueueSettings_0_Key: {{ "AccessKey" | b64enc }}
  RealtimeAPI_QueueSettings_1_Key: {{ "SecretKey" | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.enabled }}
  {{- if eq .Values.realtimeapi.authentication.type "basic" }}
  RealtimeAPI_Auth_Token: {{ .Values.realtimeapi.authentication.basic.authToken | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "azureservicebus" }}
  RealtimeAPI_ServiceBus_ConnectionString: {{ .Values.realtimeapi.queueProvider.azureservicebus.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.realtimeapi.queueProvider.enabled }}
  {{- if eq .Values.realtimeapi.queueProvider.provider "azureeventhubs" }}
  RealtimeAPI_EventHub_ConnectionString: {{ .Values.realtimeapi.queueProvider.azureeventhubs.connectionstring | b64enc }}
  {{- end }}
  {{- end }}
  {{- if .Values.redpointAI.enabled }}
  RPI_NLP_SEARCH_KEY: {{ .Values.redpointAI.cognitiveSearch.SearchKey | b64enc }}
  RPI_NLP_API_KEY: {{ .Values.redpointAI.naturalLanguage.ApiKey | b64enc }}
  RPI_NLP_MODEL_CONNECTION_STRING: {{ .Values.redpointAI.modelStorage.ConnectionString | b64enc }}
  {{- end }}
  {{- if .Values.SMTPSettings.UseCredentials }}
  SMTP_Password: {{ .Values.SMTPSettings.SMTP_Password | b64enc }}
  {{- end }}
type: Opaque
{{- end }}
{{- end }}
{{- end }}
